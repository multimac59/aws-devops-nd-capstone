# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  build-docker-image:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    # Checkout 
    steps:
      - checkout
        # Install Dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv devops
            . devops/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: |
            . devops/bin/activate
            make lint

  # Deploy docker           
  deploy-docker-image:           
    environment:
      IMAGEVERSION: v2
    docker:
      - image: circleci/golang:1.15
     
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Building Docker Image
          command: |
            docker build -t $DOCKER_USER/$IMAGE_NAME:$IMAGE_VERSION -f Dockerfile .
      - run:
          name: Listing Docker Image
          command: |
            docker image ls
      - run:
          name: uploading docker image  
          command: |
            docker image ls	 
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" docker.io
            dockerpath=$DOCKER_USER/$IMAGE_NAME:$IMAGE_VERSION
            docker push $dockerpath

  eks-deploy:
    #Image
    docker:
      - image: python:3.7.3-stretch
      
    # Checkout
    steps:
      - checkout
      - run:
          name: awscli Installation
          command: |
            # installing AWS CLI
            pip3 install awscli

      - run:
          name: iam-authenticator Installation
          command: |            
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
            echo AWS_ACCESS_KEY=$AWS_ACCESS_KEY_ID
            echo AWS_SECRET_ACCESS=$AWS_SECRET_ACCESS_KEY
            echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
            aws configure list
         
      - run:
          name: kubectl Installation
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
           
      - run:
          name: eksctl Installation
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
           
      - run:
          name: EKS cluster Creation
          command: |
            echo AWS_ACCESS_KEY=$AWS_ACCESS_KEY_ID
            echo AWS_SECRET_ACCESS=$AWS_SECRET_ACCESS_KEY
            echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
            aws configure list
            aws cloudformation --region us-east-1 list-exports > cluster.txt
            cat cluster.txt
            if [ $(grep -i "eksctl-capstoneproject" cluster.txt | wc -l) -ge 1 ]
              then
              echo "EKS Cluster already there in environment"
              else
              echo "creating EKS Cluster"
              eksctl create cluster --name $EKS_CLUSTER_NAME --version 1.19 --region us-east-1 --zones us-east-1a,us-east-1b,us-east-1c --nodegroup-name eksudanodegrp --node-type t2.small --nodes-min 2 --nodes-max 4 --managed
            fi
            
  eks-app-deploy:
    #Image
    docker:
      - image: python:3.7.3-stretch
      
    steps:
    #Checkout 
      - checkout
      - run:
          name: awscli installation
          # installing AWS  CLI & IAM Authenticator
          command: |
            pip3 install awscli
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
            aws configure list
  
      - run:
          name: kubectl installation
          command: |
            curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
           
      - run:
          name: eksctl Installation
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            
      - run:
          name: deploy the docker container in aws eks cluster
          command: |
            aws eks --region us-east-1 update-kubeconfig --name $EKSCLUSTER_NAME
            kubectl apply -f hello_world_deployment.yml
            kubectl get nodes
            kubectl get deployment
            kubectl get pod -o wide
            kubectl apply -f hello_world_service.yml
            kubectl get services
             # kubectl rollout status deployments/aws-devops-nd-capstone
            kubectl describe svc aws-devops-nd-capstone

workflows:
  version: 2.1
  default:
    jobs:
      - build-docker-image
      - deploy-docker-image:
          requires: [build-docker-image]
      - eks-deploy:
          requires: [deploy-docker-image]
      - eks-app-deploy:
          requires: [eks-deploy]
